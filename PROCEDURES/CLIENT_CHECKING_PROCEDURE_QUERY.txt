CREATE PROCEDURE clientcreate2()
AS $$
BEGIN
drop table if exists evt_ent;
CREATE TABLE  public.evt_ent  (
   id  integer NOT NULL IDENTITY(1,1),
   activeTime  integer DEFAULT NULL,
   inactiveTime  integer DEFAULT NULL,
   timestamp_redshift  timestamp DEFAULT NULL,
   orgId  integer DEFAULT NULL,
   entityId  integer DEFAULT NULL,
   domainId  integer DEFAULT NULL,
   dt timestamp DEFAULT NULL,
   type  varchar(30) DEFAULT NULL,
  PRIMARY KEY ( id ))
  interleaved sortkey (entityId,domainId,dt,timestamp_redshift,orgId); 
   
END;
$$ LANGUAGE plpgsql;


==========================================================================================================================



CREATE PROCEDURE clientinsert3()
AS $$
BEGIN
  
 
INSERT INTO public.evt_ent(
			activeTime, inactiveTime,timestamp_redshift, orgId, entityId, domainId, type, dt
		)
		(
			SELECT SUM(activeTime) AS activeTime,
			SUM(inactiveTime) AS inactiveTime,
			timestamp_redshift,
			orgId, entityId, domainId, type,
			timestamp_redshift AS dt
			FROM chrome_staging.events
			WHERE timestamp_redshift >=0 
			GROUP BY activeTime, inactiveTime,orgId, entityId, domainId, type, dt
            HAVING activeTime > 0
		);
END;
$$ LANGUAGE plpgsql;

=======================================================================================================


CREATE PROCEDURE clientcreate3()
AS $$
BEGIN
drop table if exists evt_ent;
drop table if exists evt_devices;
CREATE TABLE  public.evt_ent  (
   id  integer NOT NULL IDENTITY(1,1),
   activeTime  integer DEFAULT NULL,
   inactiveTime  integer DEFAULT NULL,
   timestamp_redshift  timestamp DEFAULT NULL,
   orgId  integer DEFAULT NULL,
   entityId  integer DEFAULT NULL,
   domainId  integer DEFAULT NULL,
   dt timestamp DEFAULT NULL,
   type  varchar(30) DEFAULT NULL,
  PRIMARY KEY ( id ))
  interleaved sortkey (entityId,domainId,dt,timestamp_redshift,orgId); 
  

CREATE TABLE  public.evt_devices  (
   activeTime integer  NOT NULL,
   inactiveTime  integer  NOT NULL,
   timestamp_redshift timestamp NOT NULL,
   orgId  integer  DEFAULT NULL,
   entityId  integer  DEFAULT NULL,
   deviceId  integer  DEFAULT NULL,
   dt  timestamp DEFAULT NULL)
   interleaved sortkey (timestamp_redshift,orgId,entityId,deviceId);     
END;
$$ LANGUAGE plpgsql;

=========================================================================================================
ORIGINAL:
INSERT INTO evt_devices(activeTime, inactiveTime, timestamp, orgId, entityId, deviceId, dt) (
			SELECT SUM(activeTime) AS activeTime,
			SUM(inactiveTime) AS inactiveTime,
			timestamp_redshift,
			orgId, entityId, deviceId,
			timestamp_redshift AS dt
			FROM events
			WHERE timestamp >= 0
			GROUP BY entityId, domainId, os, dt, collectorId
            HAVING activeTime > 0
-----------------------------------------------------------------------------------
CHANGED:
INSERT INTO public.evt_devices(activeTime, inactiveTime, timestamp_redshift, orgId, entityId, deviceId, dt) (
			SELECT SUM(activeTime) AS activeTime,
			SUM(inactiveTime) AS inactiveTime,
			timestamp_redshift,
			orgId, entityId, deviceId,
			timestamp_redshift AS dt
			FROM events
			WHERE timestamp_redshift >= 0
			GROUP BY entityId, domainId, dt,orgId,deviceId,activeTime, inactiveTime
            HAVING activeTime > 0
  );
  ===============================================================================================================================
CREATE PROCEDURE clientinsert9()
AS $$
BEGIN
  
INSERT INTO public.evt_ent(
			activeTime, inactiveTime,timestamp_redshift, orgId, entityId, domainId, type, dt
		)
		(
			SELECT SUM(activeTime) AS activeTime,
			SUM(inactiveTime) AS inactiveTime,
			timestamp_redshift,
			orgId, entityId, domainId, type,
			timestamp_redshift AS dt
			FROM chrome_staging.events
			WHERE timestamp_redshift >=0 
			GROUP BY activeTime, inactiveTime,orgId, entityId, domainId, type, dt
            HAVING activeTime > 0
		);

INSERT INTO public.evt_devices(activeTime, inactiveTime, timestamp_redshift, orgId, entityId, deviceId, dt) (
			SELECT SUM(activeTime) AS activeTime,
			SUM(inactiveTime) AS inactiveTime,
			timestamp_redshift,
			orgId, entityId, deviceId,
			timestamp_redshift AS dt
			FROM events
			WHERE timestamp_redshift >= 0
			GROUP BY entityId, domainId, dt,orgId,deviceId,activeTime, inactiveTime
            HAVING activeTime > 0
  );		
END;
$$ LANGUAGE plpgsql;